     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                          a db 3h
    15 00000001 07                          b db 7h
    16 00000002 2200                        e dw 22h
    17 00000004 1300                        f dw 13h
    18 00000006 4500                        g dw 45h
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;(e+f+g)/(a+b) - PROBLEM 25 : e,f,g - word, a,b - byte
    24                                          ; exit(0)
    25                                          
    26 00000000 B800000000                      mov eax, 0
    27 00000005 66A1[02000000]                  mov ax, [e]
    28 0000000B 660305[04000000]                add ax,[f]
    29 00000012 660305[06000000]                add ax, [g]
    30                                          
    31 00000019 B900000000                      mov ecx, 0
    32 0000001E 8A0D[00000000]                  mov cl, [a]
    33 00000024 020D[01000000]                  add cl, [b]
    34                                          
    35 0000002A F6F1                            div cl
    36 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
