     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf
     8                                  import scanf msvcrt.dll
     9                                  import exit msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                     ; our data is declared here (the variables needed by our program)
    12                                  section .data use 32
    13                                      ; ...
    14 00000000 <res 00000004>              n resd 1
    15 00000004 256400                      f db '%d', 0
    16                                  
    17                                  ; our code starts here
    18                                  section .code use 32
    19                                      start:
    20                                          ; ...
    21 00000000 68[00000000]                    push n
    22 00000005 68[04000000]                    push f
    23 0000000A FF15[00000000]                  call [scanf]
    24 00000010 83C408                          add esp, 8
    25                                          
    26 00000013 FF35[00000000]                  push dword [n]
    27 00000019 68[04000000]                    push f
    28 0000001E FF15[00000000]                  call [printf]
    29 00000024 83C408                          add esp, 8
    30                                          ; exit(0)
    31 00000027 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    32 00000029 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
