     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 02                          a db 2h
    15 00000001 03                          b db 3h
    16 00000002 06                          c db 6h
    17 00000003 33                          d db 33h
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;[100-10*a+4*(b+c)]-d - PROBLEM 25 byte
    24 00000000 B00A                            mov al, 10
    25 00000002 B400                            mov ah, 0
    26 00000004 8A0D[00000000]                  mov cl, [a]
    27 0000000A F6E1                            mul cl
    28 0000000C 66BB0000                        mov bx, 0
    29 00000010 88C3                            mov bl, al; BL = 10*a
    30                                          
    31 00000012 B064                            mov al, 100d
    32 00000014 28D8                            sub al, bl
    33 00000016 88C3                            mov bl, al ; BL = 100 - 10*a
    34                                          
    35 00000018 A0[01000000]                    mov al, [b]
    36 0000001D 0205[02000000]                  add al, [c]
    37 00000023 B400                            mov ah, 0
    38 00000025 B104                            mov cl, 4
    39 00000027 F6E1                            mul cl; AL = 4*(b+c)
    40 00000029 00C3                            add bl, al; BL = 100 - 10*a + 4*(b+c)
    41                                          
    42 0000002B 2A1D[03000000]                  sub bl, [d]; BL = (100 - 10*a + 4*(b+c)) - d
    43 00000031 88D8                            mov al, bl; AL = BL
    44                                          ; exit(0)
    45 00000033 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000035 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
